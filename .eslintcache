[{"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/index.js":"1","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/App.js":"2","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Context/auth-context.js":"3","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Hooks/auth-hooks.js":"4","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Home/Home.js":"5","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Demand/Demand.js":"6","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Auth/Auth.js":"7","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Demand/NewDemand.js":"8","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Nav/MainNav.js":"9","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Public/AllUsers.js":"10","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Public/Profil.js":"11","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Public/NoRight.js":"12","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Private/Conv.js":"13","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Private/userMessages.js":"14","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Hooks/http-hook.js":"15","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Hooks/form-hook.js":"16","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Modal.js":"17","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/ErrorModal.js":"18","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Waitings.js":"19","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Conv/OneConv.js":"20","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Input.js":"21","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/util/validators.js":"22","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Avatar.js":"23","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Backdrop.js":"24","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/IconSvg.js":"25","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Button.js":"26"},{"size":381,"mtime":1612127399000,"results":"27","hashOfConfig":"28"},{"size":2605,"mtime":1617955743713,"results":"29","hashOfConfig":"28"},{"size":178,"mtime":1614115623000,"results":"30","hashOfConfig":"28"},{"size":1753,"mtime":1617955170085,"results":"31","hashOfConfig":"28"},{"size":4660,"mtime":1617954135886,"results":"32","hashOfConfig":"28"},{"size":3481,"mtime":1616363388000,"results":"33","hashOfConfig":"28"},{"size":13358,"mtime":1617955338846,"results":"34","hashOfConfig":"28"},{"size":133,"mtime":1616363270000,"results":"35","hashOfConfig":"28"},{"size":1423,"mtime":1617954022394,"results":"36","hashOfConfig":"28"},{"size":6049,"mtime":1618084207651,"results":"37","hashOfConfig":"28"},{"size":5211,"mtime":1617912395862,"results":"38","hashOfConfig":"28"},{"size":197,"mtime":1614116239000,"results":"39","hashOfConfig":"28"},{"size":4785,"mtime":1618058680951,"results":"40","hashOfConfig":"28"},{"size":6980,"mtime":1618085169564,"results":"41","hashOfConfig":"28"},{"size":1473,"mtime":1618058716490,"results":"42","hashOfConfig":"28"},{"size":1544,"mtime":1614117766000,"results":"43","hashOfConfig":"28"},{"size":1714,"mtime":1617796188104,"results":"44","hashOfConfig":"28"},{"size":385,"mtime":1617974595776,"results":"45","hashOfConfig":"28"},{"size":1092,"mtime":1618084356997,"results":"46","hashOfConfig":"28"},{"size":346,"mtime":1617958155190,"results":"47","hashOfConfig":"28"},{"size":2403,"mtime":1617783825060,"results":"48","hashOfConfig":"28"},{"size":1674,"mtime":1612344464000,"results":"49","hashOfConfig":"28"},{"size":515,"mtime":1617974303849,"results":"50","hashOfConfig":"28"},{"size":289,"mtime":1614530538000,"results":"51","hashOfConfig":"28"},{"size":1057,"mtime":1617711104921,"results":"52","hashOfConfig":"28"},{"size":1621,"mtime":1617968804299,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"vpurtp",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/index.js",[],["111","112"],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/App.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Context/auth-context.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Hooks/auth-hooks.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Home/Home.js",["113","114","115"],"import React, { useState, useContext, useEffect } from \"react\";\n\nimport { AuthContext } from \"../../Context/auth-context\";\nimport { useHttpClient } from \"../../Hooks/http-hook\";\n\nimport \"./Home.css\";\n\nimport connectsvg from \"../../File/svg/Connect.svg\";\nimport AllUser from \"../../File/svg/AllUser.svg\";\nimport postsvg from \"../../File/svg/Post.svg\";\nimport Auth from \"../Auth/Auth\";\nimport Avatar from \"../../Components/Shared/Avatar\";\nimport IconSvg from \"../../Components/Shared/IconSvg\";\nimport demandsvg from \"../../File/svg/demande.svg\";\nimport msgsvg from \"../../File/svg/msg.svg\";\nimport disconnectsvg from \"../../File/svg/disconnect.svg\";\nimport profilsvg from \"../../File/svg/profile.svg\";\nimport adminsvg from \"../../File/svg/admin.svg\";\n\nconst Home = () => {\n  const [showauth, setshowauth] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const HancleclickAuth = () => {\n    setshowauth((prevstate) => !prevstate);\n  };\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const auth = useContext(AuthContext);\n\n  useEffect(() => {\n    if (auth.userId) {\n      const sendReq = async () => {\n        try {\n          const response = await sendRequest(\n            `http://localhost:5000/api/user/${auth.userId}`\n          );\n          setUser(response);\n        } catch (err) {}\n      };\n      sendReq();\n    }\n  }, [auth, sendRequest]);\n\n  return (\n    <div className=\"homepage\">\n      {!auth.token && (\n        <React.Fragment>\n          <Auth show={showauth} onCancel={HancleclickAuth} />\n          <IconSvg\n            src={connectsvg}\n            alt={\"connect\"}\n            width=\"195px\"\n            text=\"Connect\"\n            onClick={HancleclickAuth}\n            borderRadius=\"65px\"\n          ></IconSvg>\n          <div className=\"IconContainer\">\n            <IconSvg\n              link=\"/user/allusers\"\n              src={AllUser}\n              alt={\"connect\"}\n              width=\"100px\"\n              text=\"All Users\"\n              borderRadius=\"33px\"\n              className=\"UnconnectedIndividualIcon\"\n            ></IconSvg>\n            <IconSvg\n              link=\"/user/allusers\"\n              src={postsvg}\n              alt={\"connect\"}\n              width=\"100px\"\n              text=\"Posts\"\n              borderRadius=\"33px\"\n              className=\"UnconnectedIndividualIcon\"\n            ></IconSvg>\n          </div>\n        </React.Fragment>\n      )}\n      {auth.userId && user && (\n        <React.Fragment>\n          <Avatar image={user.image} width=\"206px\"></Avatar>\n          <div className=\"IconContainerConnect\">\n            <IconSvg\n              link=\"/demand\"\n              src={demandsvg}\n              alt={\"connect\"}\n              width=\"100px\"\n              text=\"My demands\"\n              borderRadius=\"33px\"\n              className=\"connectedIndividualIcon\"\n            />\n            <IconSvg\n              link=\"/user/allusers\"\n              src={AllUser}\n              alt={\"connect\"}\n              width=\"100px\"\n              text=\"All Users\"\n              borderRadius=\"33px\"\n              className=\"connectedIndividualIcon\"\n            />\n            <IconSvg\n              link={`/${auth.userId}/conv`}\n              src={msgsvg}\n              alt={\"connect\"}\n              width=\"100px\"\n              text=\"My msg\"\n              borderRadius=\"33px\"\n              className=\"connectedIndividualIcon\"\n            />\n            <IconSvg\n              link=\"/user/allusers\"\n              src={postsvg}\n              alt={\"connect\"}\n              width=\"100px\"\n              text=\"My post\"\n              borderRadius=\"33px\"\n              className=\"connectedIndividualIcon\"\n            />\n            <IconSvg\n              link={`/${auth.userId}/profil`}\n              src={profilsvg}\n              alt={\"connect\"}\n              width=\"100px\"\n              text=\"My profile\"\n              borderRadius=\"33px\"\n              className=\"connectedIndividualIcon\"\n            />\n            <IconSvg\n              src={disconnectsvg}\n              alt={\"disconnect\"}\n              width=\"100px\"\n              text=\"Disconnect\"\n              borderRadius=\"33px\"\n              className=\"connectedIndividualIcon\"\n              onClick={auth.logout}\n            />\n          </div>\n          {user.role === \"bureau\" && (\n            <IconSvg\n              src={adminsvg}\n              alt={\"admin\"}\n              width=\"100px\"\n              text=\"Admin\"\n              borderRadius=\"33px\"\n              className=\"connectedIndividualIcon\"\n              onClick={auth.logout}\n            />\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Demand/Demand.js",["116","117","118","119"],"import React, { useState, useContext } from \"react\";\nimport { useHttpClient } from \"../../Hooks/http-hook\";\nimport { AuthContext } from \"../../Context/auth-context\";\nimport { NavLink } from \"react-router-dom\";\nconst INITDEMAND = {\n  id: \"\",\n  datecmd: \"\",\n  datedmd: \"\",\n  status: \"\",\n  from: \"\",\n  message: \"\",\n  modepaiment: \"\",\n};\nconst MYDUMMYDEMAND = [\n  {\n    id: \"id1\",\n    datecmd: \"6 mars\",\n    datedmd: \"7 date\",\n    status: \"send\",\n    from: \"userId\",\n    message: \"Bonjour je voudrais réservé le studio pour un \",\n    modepaiment: \"carte\",\n  },\n  {\n    id: \"id2\",\n    datecmd: \"6 mars\",\n    datedmd: \"7 date\",\n    status: \"send\",\n    from: \"userId\",\n    message: \"string\",\n    modepaiment: \"carte\",\n  },\n  {\n    id: \"id3\",\n    datecmd: \"6 mars\",\n    datedmd: \"7 date\",\n    status: \"send\",\n    from: \"userId\",\n    message: \"string\",\n    modepaiment: \"carte\",\n  },\n  {\n    id: \"id4\",\n    datecmd: \"6 mars\",\n    datedmd: \"7 mars\",\n    status: \"send\",\n    from: \"userId\",\n    message: \"string\",\n    modepaiment: \"carte\",\n  },\n];\n\nconst Demand = () => {\n  const [demandonFocus, setdemandonFocus] = useState(INITDEMAND);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  console.log(auth);\n\n  const entermousehandler = (e) => {\n    console.log(e);\n    setdemandonFocus(e);\n  };\n\n  return (\n    <React.Fragment>\n      <h1>Mes Commandes</h1>\n      <section>\n        <h2>Réservations Studio</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th>Date de demande</th>\n              <th>Statut</th>\n            </tr>\n            {MYDUMMYDEMAND.map((demand) => {\n              return (\n                <React.Fragment key={demand.id}>\n                  {demandonFocus.id === demand.id && (\n                    <div className=\"AllInfo\">\n                      <div className=\"generalInfo\">\n                        {demandonFocus.status === \"send\" && (\n                          <p>\n                            Votre demande nous est parvenu. Nous la traitons\n                            actuellement.\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"specificinfo\">\n                        <ul>\n                          <li>Date de commande: {demandonFocus.datecmd}</li>\n                          <li>Date de réservation: {demandonFocus.datedmd}</li>\n                          <li>Status: {demandonFocus.status}</li>\n                          <li>Message: {demandonFocus.message}</li>\n                          <li>\n                            Moyen de payement: {demandonFocus.modepaiment}\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  )}\n                  {demandonFocus.id !== demand.id && (\n                    <tr className=\"e\" onClick={() => entermousehandler(demand)}>\n                      <td>{demand.datecmd}</td>\n                      <td>{demand.status}</td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"newdemande\">\n          <NavLink to={\"./demand/new\"}>Make a new demand</NavLink>\n        </div>\n      </section>\n      <section>\n        <h2>Réservations Matérielles</h2>\n      </section>\n      <div>{MYDUMMYDEMAND[0].id}jj</div>\n    </React.Fragment>\n  );\n};\n\nexport default Demand;\n","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Auth/Auth.js",["120","121","122"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHttpClient } from \"../../Hooks/http-hook\";\n\nimport Input from \"../../Components/Shared/Input\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../util/validators\";\nimport { AuthContext } from \"../../Context/auth-context\";\n\nimport { useForm } from \"../../Hooks/form-hook\";\nimport Modal from \"../../Components/Shared/Modal\";\nimport Button from \"../../Components/Shared/Button\";\n\nimport svgquit from \"../../File/svg/croix.svg\";\n\nconst Auth = (props) => {\n  const [isLoginMode, setIsLoginMode] = useState(props.change ? false : true);\n  const [errorText, setErrorText] = useState(null);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const auth = useContext(AuthContext);\n  const initial = !props.change\n    ? {\n        password: {\n          value: \"\",\n          isValid: false,\n        },\n        email: {\n          value: \"\",\n          isValid: false,\n        },\n      }\n    : {\n        name: {\n          value: \"\",\n          isValid: true,\n        },\n        firstName: {\n          value: \"\",\n          isValid: true,\n        },\n        Bio: {\n          value: \"\",\n          isValid: true,\n        },\n        image: {\n          value: \"\",\n          isValid: true,\n        },\n      };\n  const [authState, inputhandler, setformData] = useForm(\n    initial,\n    props.change ? true : false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setformData(\n        {\n          ...authState.inputs,\n          name: undefined,\n          firstName: undefined,\n          Bio: undefined,\n          image: undefined,\n        },\n        authState.inputs.email.isValid && authState.inputs.password.isValid\n      );\n    } else {\n      setformData(\n        {\n          ...authState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          firstName: {\n            value: \"\",\n            isValid: false,\n          },\n          Bio: {\n            value: \"\",\n            isValid: true,\n          },\n          image: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n  const userUpdateSubmitHandler = async (e) => {\n    e.preventDefault();\n    if (isLoginMode) {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/log`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: authState.inputs.email.value,\n            password: authState.inputs.password.value,\n          }),\n        });\n        const responseData = await response.json();\n        if (response.status === 201) {\n          auth.login(\n            responseData.userId,\n            responseData.token,\n            responseData.UserImg\n          );\n          props.onCancel();\n        } else {\n          setErrorText(responseData.message);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/sgnp`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: authState.inputs.email.value,\n            password: authState.inputs.password.value,\n            bio: authState.inputs.Bio.value,\n            name: authState.inputs.name.value,\n            firstName: authState.inputs.firstName.value,\n            image: authState.inputs.image.value,\n            status: status,\n            likes: likes,\n          }),\n        });\n\n        const responseData = await response.json();\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  const cancelHandler = () => {\n    props.onCancel();\n    setErrorText(null);\n  };\n\n  const [style, setstyle] = useState(\"calc((100vh - 529px) / 2)\");\n\n  useEffect(() => {\n    const top2 =\n      (window.innerHeight - 880) / 2 > 0 ? (window.innerHeight - 880) / 2 : 0;\n    const top1 =\n      (window.innerHeight - 529) / 2 > 0 ? (window.innerHeight - 529) / 2 : 0;\n    setstyle(() => (isLoginMode ? `${top1}px` : `${top2}px`));\n  }, [isLoginMode]);\n\n  const explicationHandler = (text) => {\n    setErrorText(text);\n  };\n\n  //managing like\n  const [likes, setlikes] = useState(props.change ? props.user.likes : []);\n\n  //transitionninglike\n  const [transition, settransition] = useState(null);\n\n  //removelikehanle\n  const removelikehandle = (like) => {\n    settransition(like);\n    setTimeout(() => {\n      setlikes((prevlikes) => prevlikes.filter((prvlike) => prvlike !== like));\n      settransition(null);\n    }, 500);\n  };\n\n  //state of adding\n  const [adding, setadd] = useState(null);\n\n  //value adding\n  const [myval, setmyval] = useState(\"\");\n\n  const addhandler = () => {\n    setadd(true);\n    setmyval(\"\");\n  };\n  const validateHandle = () => {\n    if (myval !== \"\" && !likes.includes(myval) && myval.length < 21) {\n      setlikes((prevlikes) => prevlikes.concat([myval]));\n      setErrorText(null);\n    }\n    if (likes.includes(myval)) {\n      setErrorText(\"You cannot have 2 identiques like\");\n    }\n    if (myval.length > 20) {\n      setErrorText(\"One like should be below 20 charactre\");\n    }\n\n    setadd(false);\n  };\n  const changevalhandler = (e) => {\n    setmyval(e.target.value);\n  };\n  const [status, setstatus] = useState(\n    props.change ? props.user.status : \"public\"\n  );\n  const changeStatusHandler = (status) => {\n    setstatus(status);\n  };\n\n  const changehandlersend = async (e) => {\n    e.preventDefault();\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/user/${auth.userId}`,\n        \"PATCH\",\n        JSON.stringify({\n          bio: authState.inputs.Bio.value,\n          name: authState.inputs.name.value,\n          firstName: authState.inputs.firstName.value,\n          image: authState.inputs.image.value,\n          status: status,\n          likes: likes,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      props.onCancelreload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <React.Fragment>\n      <Modal\n        top={style}\n        //transform={!isLoginMode ? \"translateY(-140px)\" : \"\"}\n        show={props.show}\n        onCancel={cancelHandler}\n      >\n        <form\n          onSubmit={!props.change ? userUpdateSubmitHandler : changehandlersend}\n        >\n          {!props.change && (\n            <Input\n              prop\n              id=\"email\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Email\"\n              //errorText=\"please enter a valid email\"\n              validators={[VALIDATOR_EMAIL()]}\n              onInput={inputhandler}\n            />\n          )}\n          {!props.change && (\n            <Input\n              id=\"password\"\n              element=\"input\"\n              type=\"password\"\n              label=\"Password\"\n              //errorText=\"Your password must be at least 8characteres\"\n              validators={[VALIDATOR_MINLENGTH(8)]}\n              onInput={inputhandler}\n            />\n          )}\n          {!isLoginMode && (\n            <Input\n              id=\"name\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Nom\"\n              initialvalid\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputhandler}\n              initialvalue={`${props.change ? props.user.name : \"\"}`}\n            />\n          )}\n          {!isLoginMode && (\n            <Input\n              id=\"firstName\"\n              element=\"input\"\n              type=\"text\"\n              initialvalid\n              label=\"Prenom\"\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputhandler}\n              initialvalue={`${props.change ? props.user.firstname : \"\"}`}\n            />\n          )}\n\n          {!isLoginMode && (\n            <Input\n              id=\"image\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Image Url\"\n              onInput={inputhandler}\n              initialvalid\n              explication\n              initialvalue={`${props.change ? props.user.image : \"\"}`}\n              onClickexplication={() =>\n                explicationHandler(\n                  \"GatsunWeb doesn't accept directy file for the moment. Please give a link\"\n                )\n              }\n            ></Input>\n          )}\n          {!isLoginMode && (\n            <Input\n              id=\"Bio\"\n              type=\"text\"\n              label=\"Bio\"\n              height=\"90px\"\n              initialvalid\n              borderRadius=\"16px\"\n              onInput={inputhandler}\n              explication\n              initialvalue={`${props.change ? props.user.bio : \"\"}`}\n              onClickexplication={() =>\n                explicationHandler(\"Your bio describe yourself in a few word\")\n              }\n            />\n          )}\n          {!isLoginMode && (\n            <div className=\"form-control\">\n              <label>Likes</label>\n\n              <div className=\"Answerlike\">\n                {likes.map((like, index) => {\n                  return (\n                    <React.Fragment key={like + index}>\n                      <div\n                        className=\"like mylike\"\n                        rect={transition === like ? \"yes \" : \"no\"}\n                        style={{\n                          transform: ` ${\n                            transition === like ? \"translateY(-30px) \" : \"\"\n                          }`,\n                          opacity: ` ${transition === like ? \"0\" : \"1\"}`,\n                        }}\n                      >\n                        <img\n                          className=\"imgquitlike\"\n                          src={svgquit}\n                          alt=\"quit\"\n                          onClick={() => {\n                            removelikehandle(like);\n                          }}\n                        />\n                        <p>{like}</p>\n                        {index === likes.length - 1 &&\n                          likes.length < 3 &&\n                          !adding && (\n                            <div className=\"crox\" onClick={addhandler}>\n                              <div className=\"croxsp\" />\n                              <div className=\"croxsp\" />\n                            </div>\n                          )}\n                      </div>\n                    </React.Fragment>\n                  );\n                })}\n                {adding && (\n                  <React.Fragment>\n                    <div className={\"adding\"}>\n                      <input\n                        style={{ width: \"150px\" }}\n                        value={myval}\n                        onChange={changevalhandler}\n                        initialvalid\n                      />\n                      <div className=\"validate\" onClick={validateHandle}>\n                        <div className=\"croxsp\" />\n                        <div className=\"croxsp\" />\n                      </div>\n                    </div>\n                  </React.Fragment>\n                )}\n                {likes.length === 0 && !adding && (\n                  <div className=\"validate\" onClick={addhandler}>\n                    <div className=\"croxsp\" />\n                    <div className=\"croxsp\" />\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          {!isLoginMode && (\n            <div className=\"form-control\">\n              <label>Status</label>\n              <div className=\"Answerstatu\">\n                <div\n                  className={`choice${\n                    status === \"public\" ? \"focus\" : \"unfocus\"\n                  }`}\n                  onClick={() => changeStatusHandler(\"public\")}\n                >\n                  <p>Public</p>\n                </div>\n                <div\n                  className={`choice${\n                    status === \"private\" ? \"focus\" : \"unfocus\"\n                  }`}\n                  onClick={() => changeStatusHandler(\"private\")}\n                >\n                  <p>Private</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <Button\n            type=\"submit\"\n            //disabled={!authState.isValid}\n            height=\"56px\"\n            text={\n              !isLoginMode\n                ? !props.change\n                  ? \"Signup\"\n                  : \"Apply Change\"\n                : \"Login\"\n            }\n            fontsize=\"30px\"\n            borderradius=\"22px\"\n            width=\"100%\"\n            topmargin={`${isLoginMode ? \"50px\" : \"\"}`}\n            orange\n          />\n        </form>\n        {!props.change && (\n          <Button\n            onClick={switchModeHandler}\n            height=\"39px\"\n            text={`Switch to ${isLoginMode ? \"Signup\" : \"Login\"}`}\n            fontsize=\"15px\"\n            borderradius=\"22px\"\n          />\n        )}\n        {errorText && (\n          <div className=\"errorText\">\n            <p>{errorText}</p>\n          </div>\n        )}\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/Demand/NewDemand.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Nav/MainNav.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Public/AllUsers.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Public/Profil.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Public/NoRight.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Private/Conv.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Pages/User/Private/userMessages.js",["123"],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Hooks/http-hook.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Hooks/form-hook.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Modal.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/ErrorModal.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Waitings.js",["124"],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Conv/OneConv.js",[],["125","126"],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Input.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/util/validators.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Avatar.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Backdrop.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/IconSvg.js",[],"/Users/louislombard/Documents/Project-Web Perso/GatsunProject/GatsunDev/gatsunweb/src/Components/Shared/Button.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":27,"column":11,"nodeType":"133","messageId":"134","endLine":27,"endColumn":20},{"ruleId":"131","severity":1,"message":"135","line":27,"column":22,"nodeType":"133","messageId":"134","endLine":27,"endColumn":27},{"ruleId":"131","severity":1,"message":"136","line":27,"column":42,"nodeType":"133","messageId":"134","endLine":27,"endColumn":52},{"ruleId":"131","severity":1,"message":"132","line":55,"column":11,"nodeType":"133","messageId":"134","endLine":55,"endColumn":20},{"ruleId":"131","severity":1,"message":"135","line":55,"column":22,"nodeType":"133","messageId":"134","endLine":55,"endColumn":27},{"ruleId":"131","severity":1,"message":"137","line":55,"column":29,"nodeType":"133","messageId":"134","endLine":55,"endColumn":40},{"ruleId":"131","severity":1,"message":"136","line":55,"column":42,"nodeType":"133","messageId":"134","endLine":55,"endColumn":52},{"ruleId":"131","severity":1,"message":"132","line":21,"column":11,"nodeType":"133","messageId":"134","endLine":21,"endColumn":20},{"ruleId":"131","severity":1,"message":"135","line":21,"column":22,"nodeType":"133","messageId":"134","endLine":21,"endColumn":27},{"ruleId":"131","severity":1,"message":"136","line":21,"column":42,"nodeType":"133","messageId":"134","endLine":21,"endColumn":52},{"ruleId":"138","severity":1,"message":"139","line":118,"column":6,"nodeType":"140","endLine":118,"endColumn":39,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"142","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":16},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth.userId'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'ReactDOM' is defined but never used.",["145"],["146"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [convId, sendRequest, auth.token, auth.userId]",{"range":"150","text":"151"},[3203,3236],"[convId, sendRequest, auth.token, auth.userId]"]