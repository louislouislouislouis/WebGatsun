[{"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/index.js":"1","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/App.js":"2","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Waitings.js":"3","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/auth-hooks.js":"4","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/context/auth-context.js":"5","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Nav/MainNav.js":"6","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Input.js":"7","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Avatar.js":"8","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/form-hook.js":"9","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/util/validators.js":"10","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/OneConv.js":"11","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Auth/Auth.js":"12","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/Conv.js":"13","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Home/Home.js":"14","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/NoRight.js":"15","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/Profil.js":"16","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/AllUsers.js":"17","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/userMessages.js":"18"},{"size":381,"mtime":1612127399040,"results":"19","hashOfConfig":"20"},{"size":2231,"mtime":1614116915279,"results":"21","hashOfConfig":"20"},{"size":498,"mtime":1612182225931,"results":"22","hashOfConfig":"20"},{"size":1683,"mtime":1613984060858,"results":"23","hashOfConfig":"20"},{"size":178,"mtime":1614115623920,"results":"24","hashOfConfig":"20"},{"size":860,"mtime":1614113048861,"results":"25","hashOfConfig":"20"},{"size":2022,"mtime":1612903194784,"results":"26","hashOfConfig":"20"},{"size":315,"mtime":1612202099986,"results":"27","hashOfConfig":"20"},{"size":1572,"mtime":1612900499965,"results":"28","hashOfConfig":"20"},{"size":1674,"mtime":1612344464776,"results":"29","hashOfConfig":"20"},{"size":466,"mtime":1613984060857,"results":"30","hashOfConfig":"20"},{"size":5213,"mtime":1614112473630,"results":"31","hashOfConfig":"20"},{"size":2470,"mtime":1614113586326,"results":"32","hashOfConfig":"20"},{"size":102,"mtime":1614115162151,"results":"33","hashOfConfig":"20"},{"size":197,"mtime":1614116239157,"results":"34","hashOfConfig":"20"},{"size":7420,"mtime":1614116704889,"results":"35","hashOfConfig":"20"},{"size":1567,"mtime":1614116844757,"results":"36","hashOfConfig":"20"},{"size":8364,"mtime":1614116948320,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1iwl5ea",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/index.js",[],["78","79"],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/App.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Waitings.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/auth-hooks.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/context/auth-context.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Nav/MainNav.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Input.js",["80"],"import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouch: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialvalue || \"\",\n    isTouch: false,\n    isValid: props.initialvalid || false,\n  });\n  useEffect(() => {\n    dispatch({\n      type: \"CHANGE\",\n      val: \"\",\n      validators: props.validators,\n    });\n  }, [props.onclear]);\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, onInput, value, isValid]);\n\n  const ChangeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={ChangeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.row || 9}\n        onChange={ChangeHandler}\n        value={inputState.value}\n        onBlur={touchHandler}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouch && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouch && props.errorText && (\n        <p>{props.errorText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Avatar.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/form-hook.js",["81"],"import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      //console.log(action.inputs);\n      return {\n        inputs: action.inputs,\n        isValid: action.FormisValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialCalidity) => {\n  const [formState, dispacth] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialCalidity,\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispacth({\n      type: \"INPUT_CHANGE\",\n      inputId: id,\n      value: value,\n      isValid: isValid,\n    });\n  }, []);\n  const setFormData = useCallback((inputData, formValidity) => {\n    //console.log(inputData);\n    //console.log(formValidity);\n    dispacth({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      FormisValid: formValidity,\n    });\n    console.log(formState);\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/util/validators.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/OneConv.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Auth/Auth.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/Conv.js",["82","83","84"],"import React, { useEffect, useState } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport OneConv from \"../../../Components/Shared/OneConv\";\n\nimport \"./Conv.css\";\nconst Conv = () => {\n  const userId = useParams().userId;\n  const [myconv, setmyconv] = useState();\n  const [userimg, setuserimg] = useState([]);\n\n  useEffect(() => {\n    const sendReq = async () => {\n      try {\n        const convsresponse = await fetch(\n          `http://localhost:5000/api/conv/w/${userId}`\n        );\n        const listofconvs = await convsresponse.json();\n        console.log(listofconvs);\n        if (listofconvs) {\n          setmyconv(listofconvs);\n        }\n        getimage(listofconvs);\n      } catch (err) {}\n    };\n    sendReq();\n  }, []);\n  const test = () => {\n    console.log(userimg);\n    console.log(myconv);\n  };\n  const getimage = async (convs) => {\n    let arrayimg = [];\n    for (const conv of convs) {\n      const parts = conv.participants;\n      let mesparticipantsimg = [];\n      for (const part of parts) {\n        try {\n          const response = await fetch(\n            `http://localhost:5000/api/user/${part}`\n          );\n          const user = await response.json();\n          mesparticipantsimg.push(user.img);\n        } catch (err) {}\n        //console.log(mesparticipantsimg)\n      }\n      arrayimg.push({ conv: conv.id, partimg: mesparticipantsimg });\n    }\n    //console.log(arrayimg)\n    setuserimg(arrayimg);\n  };\n\n  return (\n    <React.Fragment>\n      {myconv && myconv.length !== 0 && (\n        <div className=\"List\">\n          {myconv.map((conv) => {\n            let lol = userimg.find((convp) => convp.conv === conv.id);\n            if (lol) {\n              return (\n                <NavLink to={`/${userId}/conv/${conv.id}`}>\n                  <OneConv\n                    /* with={conv.participants.filter((part) => part !== userId)} */\n                    with={lol.partimg}\n                  />\n                </NavLink>\n              );\n            }\n          })}\n          <NavLink to={`/user/allusers`}>\n            {myconv.length === 0\n              ? \"You don't have any conversation yet. Start one?\"\n              : \"Start a new conversation\"}\n          </NavLink>\n        </div>\n      )}\n      {myconv && myconv.length === 0 && (\n        <NavLink to={`/user/allusers`}>\n          You don't haaave any conversation yet. Start one?\n        </NavLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Conv;\n","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Home/Home.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/NoRight.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/Profil.js",["85"],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/AllUsers.js",["86","87"],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/userMessages.js",["88","89","90","91","92","93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":37,"column":6,"nodeType":"102","endLine":37,"endColumn":21,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":58,"column":6,"nodeType":"102","endLine":58,"endColumn":8,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"106","line":27,"column":6,"nodeType":"102","endLine":27,"endColumn":8,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":28,"column":9,"nodeType":"110","messageId":"111","endLine":28,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":57,"column":30,"nodeType":"114","messageId":"115","endLine":57,"endColumn":32},{"ruleId":"100","severity":1,"message":"106","line":35,"column":6,"nodeType":"102","endLine":35,"endColumn":8,"suggestions":"116"},{"ruleId":"108","severity":1,"message":"117","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":17},{"ruleId":"108","severity":1,"message":"118","line":27,"column":13,"nodeType":"110","messageId":"111","endLine":27,"endColumn":21},{"ruleId":"100","severity":1,"message":"119","line":27,"column":14,"nodeType":"120","endLine":27,"endColumn":67},{"ruleId":"100","severity":1,"message":"121","line":29,"column":19,"nodeType":"120","endLine":31,"endColumn":6},{"ruleId":"100","severity":1,"message":"122","line":117,"column":6,"nodeType":"102","endLine":117,"endColumn":8,"suggestions":"123"},{"ruleId":"100","severity":1,"message":"124","line":155,"column":6,"nodeType":"102","endLine":155,"endColumn":8,"suggestions":"125"},{"ruleId":"100","severity":1,"message":"126","line":162,"column":6,"nodeType":"102","endLine":162,"endColumn":14,"suggestions":"127"},{"ruleId":"108","severity":1,"message":"118","line":177,"column":11,"nodeType":"110","messageId":"111","endLine":177,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":197,"column":11,"nodeType":"110","messageId":"111","endLine":197,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":285,"column":9,"nodeType":"130","endLine":285,"endColumn":28},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.validators'. Either include it or remove the dependency array.","ArrayExpression",["133"],"React Hook useCallback has a missing dependency: 'formState'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["135"],"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["136"],"'NavLink' is defined but never used.","'response' is assigned a value but never used.","Assignments to the 'source' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","Assignments to the 'eventSource' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useCallback has missing dependencies: 'convId' and 'myconv'. Either include them or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'convId' and 'getmsg'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'myconv'. Either include it or remove the dependency array.",["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [props.onclear, props.validators]",{"range":"153","text":"154"},"Update the dependencies array to be: [formState]",{"range":"155","text":"156"},"Update the dependencies array to be: [userId]",{"range":"157","text":"158"},{"range":"159","text":"158"},"Update the dependencies array to be: [convId, myconv]",{"range":"160","text":"161"},"Update the dependencies array to be: [convId, getmsg]",{"range":"162","text":"163"},"Update the dependencies array to be: [getmsg, myconv]",{"range":"164","text":"165"},[779,794],"[props.onclear, props.validators]",[1514,1516],"[formState]",[752,754],"[userId]",[1009,1011],[3482,3484],"[convId, myconv]",[4719,4721],"[convId, getmsg]",[4864,4872],"[getmsg, myconv]"]