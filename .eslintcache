[{"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/index.js":"1","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/App.js":"2","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Waitings.js":"3","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/auth-hooks.js":"4","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/context/auth-context.js":"5","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Nav/MainNav.js":"6","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Input.js":"7","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Avatar.js":"8","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/form-hook.js":"9","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/util/validators.js":"10","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Auth/Auth.js":"11","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/Conv.js":"12","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Home/Home.js":"13","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/NoRight.js":"14","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/Profil.js":"15","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/AllUsers.js":"16","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/userMessages.js":"17","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Context/auth-context.js":"18","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Conv/OneConv.js":"19","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/http-hook.js":"20","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/ErrorModal.js":"21","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Modal.js":"22","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Backdrop.js":"23"},{"size":381,"mtime":1612127399040,"results":"24","hashOfConfig":"25"},{"size":2202,"mtime":1614680485942,"results":"26","hashOfConfig":"25"},{"size":498,"mtime":1612182225931,"results":"27","hashOfConfig":"25"},{"size":1579,"mtime":1614536756307,"results":"28","hashOfConfig":"25"},{"size":178,"mtime":1614115623920,"results":"29","hashOfConfig":"25"},{"size":860,"mtime":1614117120010,"results":"30","hashOfConfig":"25"},{"size":2099,"mtime":1614458173311,"results":"31","hashOfConfig":"25"},{"size":347,"mtime":1614637175857,"results":"32","hashOfConfig":"25"},{"size":1544,"mtime":1614117766556,"results":"33","hashOfConfig":"25"},{"size":1674,"mtime":1612344464776,"results":"34","hashOfConfig":"25"},{"size":5213,"mtime":1614363219549,"results":"35","hashOfConfig":"25"},{"size":2096,"mtime":1614635540002,"results":"36","hashOfConfig":"25"},{"size":102,"mtime":1614115162151,"results":"37","hashOfConfig":"25"},{"size":197,"mtime":1614116239157,"results":"38","hashOfConfig":"25"},{"size":16115,"mtime":1614686000056,"results":"39","hashOfConfig":"25"},{"size":4028,"mtime":1614726162282,"results":"40","hashOfConfig":"25"},{"size":5485,"mtime":1614635087833,"results":"41","hashOfConfig":"25"},{"size":178,"mtime":1614115623920,"results":"42","hashOfConfig":"25"},{"size":394,"mtime":1614120056822,"results":"43","hashOfConfig":"25"},{"size":1342,"mtime":1614678211226,"results":"44","hashOfConfig":"25"},{"size":387,"mtime":1614634537875,"results":"45","hashOfConfig":"25"},{"size":1244,"mtime":1614723894551,"results":"46","hashOfConfig":"25"},{"size":289,"mtime":1614530538532,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1iwl5ea",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/index.js",[],["97","98"],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/App.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Waitings.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/auth-hooks.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/context/auth-context.js",[],["99","100"],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Nav/MainNav.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Input.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Avatar.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/form-hook.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/util/validators.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Auth/Auth.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/Conv.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/Home/Home.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/NoRight.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/Profil.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Public/AllUsers.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Pages/User/Private/userMessages.js",["101","102","103","104"],"import React, {\n  useEffect,\n  useState,\n  useRef,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\n\nimport Avatar from \"../../../Components/Shared/Avatar\";\nimport Input from \"../../../Components/Shared/Input\";\nimport { useForm } from \"../../../Hooks/form-hook\";\nimport { VALIDATOR_REQUIRE } from \"../../../util/validators\";\nimport { AuthContext } from \"../../../Context/auth-context\";\nimport { useHttpClient } from \"../../../Hooks/http-hook\";\n\nimport backimg from \"../../../File/Icon/back.png\";\n\nimport \"./userMessages.css\";\n\nconst UserMessages = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const msgRef = useRef();\n  const auth = useContext(AuthContext);\n\n  const [myconv, setrconv] = useState();\n  const convId = useParams().convId;\n  const evtSrclive = useRef(null);\n\n  //CREER LA SOURCEEVENT SHARABLE\n  const listenEvt = useCallback(() => {\n    if (!evtSrclive.current) {\n      evtSrclive.current = new EventSource(\n        `http://localhost:5000/api/live/${auth.userId}`\n      );\n    }\n  }, [auth.userId]);\n\n  const [MsgState, inputhandler, setformData] = useForm(\n    {\n      body: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  //FONCTION A UTILISER POUR DEMANDER UN RECHARGEMENT DES DONNES SANS PAGE\n\n  const lasendReq = useCallback(() => {\n    const vsendReq = async () => {\n      try {\n        const response = await sendRequest(\n          `http://localhost:5000/api/conv/${convId}`,\n          \"GET\",\n          null,\n          { Authorization: \"bearer \" + auth.token }\n        );\n        setrconv(response);\n      } catch (err) {}\n    };\n    vsendReq();\n\n    msgRef.current.scrollTop = msgRef.current.scrollHeight + 100;\n  }, [convId, sendRequest, auth.token]);\n\n  const sendlivreq = useCallback(() => {\n    const vsendReq = async () => {\n      try {\n        const response = await sendRequest(\n          `http://localhost:5000/api/live/${convId}/newmsg`\n        );\n      } catch (err) {}\n    };\n    vsendReq();\n  }, [convId, sendRequest]);\n\n  //SE CONNECTER AU LIVE ET ETRE A L'AFFUT DES MESSAGE\n  useEffect(() => {\n    listenEvt();\n    evtSrclive.current.addEventListener(\"newmsg\", (event) => {\n      console.log(\"Message\", event.data);\n      if (event.data === convId) {\n        lasendReq();\n      }\n    });\n    return () => evtSrclive.current.close();\n  }, [convId, lasendReq, listenEvt]);\n\n  //RECUPERER CONV AU CHARGMEENT DE LA PAGE\n\n  useEffect(() => {\n    const sendReq = async () => {\n      try {\n        const response = await sendRequest(\n          `http://localhost:5000/api/conv/${convId}`,\n          \"GET\",\n          null,\n          { Authorization: \"bearer \" + auth.token }\n        );\n        setrconv(response);\n      } catch (err) {}\n    };\n    sendReq();\n  }, [convId, sendRequest, auth.token]);\n\n  //POUR AVOIR UN ECRAN EN BAS AU RECHARGEMENT ET A L'ARRIVEE SUR LA PAGE\n\n  useEffect(() => {\n    if (myconv) {\n      msgRef.current.scrollTop = msgRef.current.scrollHeight;\n    }\n  }, [myconv]);\n\n  const [onclear, setonclear] = useState(false);\n\n  const userUpdateSubmitHandler = async (e) => {\n    e.preventDefault();\n    console.log(convId);\n\n    await sendRequest(\n      `http://localhost:5000/api/conv/${convId}/msg`,\n      \"POST\",\n      JSON.stringify({\n        value: MsgState.inputs.body.value,\n      }),\n      {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + auth.token,\n      }\n    );\n    lasendReq();\n    sendlivreq();\n    setformData(\n      {\n        body: {\n          value: \"\",\n          isValid: false,\n        },\n      },\n      false\n    );\n    setonclear(true);\n    setTimeout(() => setonclear(false), 500);\n  };\n  return (\n    <div className=\"User__message__page\">\n      {myconv && (\n        <div className=\"user_conv\">\n          <div className=\"user_conv_info\">\n            {myconv.img.map((part) => {\n              return (\n                <div key={part} className=\"participants\">\n                  <Avatar image={part} alt={part} width=\"50px\"></Avatar>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"message\" ref={msgRef}>\n            {myconv.messages.map((index) => {\n              return (\n                <div\n                  className={`${\n                    auth.userId === index.from ? \"my\" : \"other\"\n                  }msg`}\n                  key={index.date + index.from}\n                >\n                  <div\n                    className={`${\n                      auth.userId === index.from ? \"my\" : \"other\"\n                    }msg__content`}\n                  >\n                    <p>{index.body}</p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <form className=\"send\" onSubmit={userUpdateSubmitHandler}>\n            {MsgState.inputs.body && (\n              <Input\n                id=\"body\"\n                element=\"input\"\n                type=\"text\"\n                validators={[VALIDATOR_REQUIRE()]}\n                onInput={inputhandler}\n                initialvalue=\"\"\n                onclear={onclear}\n              />\n            )}\n            <button type=\"submit\" disabled={!MsgState.isValid}>\n              Envoyer\n            </button>\n          </form>\n        </div>\n      )}\n      <NavLink to={`/${auth.userId}/conv`}>\n        <img src={backimg} alt=\"retour\"></img>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default UserMessages;\n","/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Context/auth-context.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Conv/OneConv.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Hooks/http-hook.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/ErrorModal.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Modal.js",[],"/Users/louislombard/Desktop/Site Gatsun/gatsunweb/src/Components/Shared/Backdrop.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":22,"column":11,"nodeType":"113","messageId":"114","endLine":22,"endColumn":20},{"ruleId":"111","severity":1,"message":"115","line":22,"column":22,"nodeType":"113","messageId":"114","endLine":22,"endColumn":27},{"ruleId":"111","severity":1,"message":"116","line":22,"column":42,"nodeType":"113","messageId":"114","endLine":22,"endColumn":52},{"ruleId":"111","severity":1,"message":"117","line":72,"column":15,"nodeType":"113","messageId":"114","endLine":72,"endColumn":23},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]